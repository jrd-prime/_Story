using System;
using _StoryGame.Core.Interact;
using VContainer;

namespace _StoryGame.Game.Interact.Abstract
{
    public abstract class AInteractable<TInteractableSystem> : AInteractableBase
        where TInteractableSystem : IInteractableSystem
    {
        protected TInteractableSystem System;

        private void Start()
        {
            System = Resolver.Resolve<TInteractableSystem>();
            if (Equals(System, default(TInteractableSystem)))
                throw new Exception("InteractableSystem is null. " + gameObject.name);

            OnStart();
        }

        protected abstract void OnStart();
    }
}
